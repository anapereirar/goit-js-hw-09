{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SACpCC,QAAQC,IAAIJ,GAGZ,IAAMK,EAAgB,SAACC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KA4CPP,EAAKc,iBAAiB,UA/BH,SAACC,GAClBA,EAAMC,iBAON,IALA,IAAIC,EAAQC,SAASlB,EAAKO,MAAMY,MAAO,IACnCC,EAAOF,SAASlB,EAAKoB,KAAKD,MAAO,IACjCE,EAASH,SAASlB,EAAKqB,OAAOF,MAAO,IACrCG,EAAO,EAEFC,EAAI,EAAGA,GAAKF,EAAQE,IACjB,IAANA,GACFlB,EAAckB,EAAGN,GACdO,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEnEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA5B,GAAS6B,OAAOI,QAAQ,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAErEe,EAAOL,EAAQG,IAEbf,EAAckB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEnEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA5B,GAAS6B,OAAOI,QAAQ,oBAAmCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAEvEe,GAAQF,E","sources":["src/js/03-promises.js"],"sourcesContent":["//importación de la biblioteca notiflix\nimport Notiflix from 'notiflix';\n\n//Acceso al DOM\nconst form = document.querySelector('.form');\nconsole.log(form);\n\n//Creación de la promesa\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nconst activation = (event) => {\n  event.preventDefault();\n\n  let delay = parseInt(form.delay.value, 10);\n  let step = parseInt(form.step.value, 10);\n  let amount = parseInt(form.amount.value, 10);\n  let temp = 0;\n\n  for (let i = 1; i <= amount; i++) {\n    if (i === 1) {\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      temp = delay + step;\n    } else {\n        createPromise(i, temp)\n          .then(({ position, delay }) => {\n            Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n          });     \n      temp += step;\n    }\n  }\n};\n\nform.addEventListener(\"submit\", activation);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","console","log","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","temp","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.7d692ba5.js.map"}